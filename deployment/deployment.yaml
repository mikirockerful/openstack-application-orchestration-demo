heat_template_version: 2017-02-24

description: Crea dos redes privadas, un router, el admin server y 3 app server

parameters:

  flavor:
    type: string
    description: Flavor de la instancia
    default: m1.tiny
    constraints:
      - allowed_values: [m1.nano, m1.tiny, m1.small, m1.large]
        description: Value must be one of m1.tiny, m1.small or m1.large
  
  image:
    type: string
    default: cirros-0.3.4-x86_64-vnx
    description: Nombre de la imagen
  
  public_net_name:
    type: string
    default: ExtNet
    description: Nombre de la red publica

  private_net_name: 
    type: string 
    description: Nombre de la red privada 1

  private_subnet_name: 
    type: string 
    description: Nombre de la subred privada 1

  private_subnet_cidr: 
    type: string 
    description: CIDR de la subred privada 1
 
  private_subnet_gateway: 
    type: string 
    description: Pasarela de la subred privada 1

  private_net_2_name: 
    type: string 
    description: Nombre de la red privada 2

  private_subnet_2_name: 
    type: string 
    description: Nombre de la subred privada 2

  private_subnet_2_cidr: 
    type: string 
    description: CIDR de la subred privada 2

resources:

  clave_generada:
    type: OS::Nova::KeyPair
    properties:
      name: clave_generada
      save_private_key: true

  admin_server:
    type: OS::Nova::Server
    depends_on: [ clave_generada ]
    properties:
      name: admin_server
      image: { get_param: image }
      flavor: { get_param: flavor }
      key_name: { get_resource: clave_generada }
      networks:
        - port: { get_resource: admin_server_port0 }
        - port: { get_resource: admin_server_port1 }

  admin_server_port0:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net }
      security_groups:
        - default
      fixed_ips:
        - subnet_id: { get_resource: private_subnet }

  admin_server_port1:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: private_net_2 }
      security_groups:
        - default
      fixed_ips:
        - subnet_id: { get_resource: private_subnet_2 }

  admin_server_public:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network_id: { get_param: public_net_name }
      port_id: { get_resource: admin_server_port0 }

  app_server_1:
    type: app_server.yaml
    depends_on: [ private_net, private_subnet, private_net_2, private_subnet_2 ]
    properties:
      server_name: app_server_1
      private_net_name: { get_param: private_net_name }
      private_subnet_name: { get_param: private_subnet_name }
      private_net_2_name: { get_param: private_net_2_name }
      private_subnet_2_name: { get_param: private_subnet_2_name }
  app_server_2:
    type: app_server.yaml
    depends_on: [ private_net, private_subnet, private_net_2, private_subnet_2 ]
    properties:
      server_name: app_server_2
      private_net_name: { get_param: private_net_name }
      private_subnet_name: { get_param: private_subnet_name }
      private_net_2_name: { get_param: private_net_2_name }
      private_subnet_2_name: { get_param: private_subnet_2_name }
  app_server_3:
    type: app_server.yaml
    depends_on: [ private_net, private_subnet, private_net_2, private_subnet_2 ]
    properties:
      server_name: app_server_3
      private_net_name: { get_param: private_net_name }
      private_subnet_name: { get_param: private_subnet_name }
      private_net_2_name: { get_param: private_net_2_name }
      private_subnet_2_name: { get_param: private_subnet_2_name }

  zk_server_1:
    type: zk_server.yaml
    depends_on: [ private_net_2, private_subnet_2 ]
    properties:
      server_name: zk_server_1
      private_net_name: { get_param: private_net_2_name }
      private_subnet_name: { get_param: private_subnet_2_name }
  zk_server_2:
    type: zk_server.yaml
    depends_on: [ private_net_2, private_subnet_2 ]
    properties:
      server_name: zk_server_2
      private_net_name: { get_param: private_net_2_name }
      private_subnet_name: { get_param: private_subnet_2_name }
  zk_server_3:
    type: zk_server.yaml
    depends_on: [ private_net_2, private_subnet_2 ]
    properties:
      server_name: zk_server_3
      private_net_name: { get_param: private_net_2_name }
      private_subnet_name: { get_param: private_subnet_2_name }

  db_server:
    type: zk_server.yaml
    depends_on: [ private_net_2, private_subnet_2 ]
    properties:
      server_name: db_server
      private_net_name: { get_param: private_net_2_name }
      private_subnet_name: { get_param: private_subnet_2_name }
      image: cirros-0.3.4-x86_64-vnx

  private_net: 
    type: OS::Neutron::Net 
    properties: 
      name: { get_param: private_net_name }

  private_subnet: 
    type: OS::Neutron::Subnet 
    properties: 
      name: { get_param: private_subnet_name } 
      network_id: { get_resource: private_net } 
      cidr: { get_param: private_subnet_cidr } 
      gateway_ip: { get_param: private_subnet_gateway }

  private_net_2: 
    type: OS::Neutron::Net 
    properties: 
      name: { get_param: private_net_2_name }

  private_subnet_2: 
    type: OS::Neutron::Subnet 
    properties: 
      name: { get_param: private_subnet_2_name } 
      network_id: { get_resource: private_net_2 } 
      cidr: { get_param: private_subnet_2_cidr } 

  mi_router:
    type: OS::Neutron::Router
    properties:
      name: mi_router
      external_gateway_info: 
        network: { get_param: public_net_name }

  interfaz_router:
    type: OS::Neutron::RouterInterface
    depends_on: [ mi_router ]
    properties:
      router: { get_resource: mi_router }
      subnet: { get_resource: private_subnet }

outputs:

  admin_server_private_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ admin_server, first_address ] }

  admin_server_public_ip:
    description: IP flotante externa de la maquina
    value: { get_attr: [ admin_server_public, floating_ip_address ] }

  zk_server_1_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ zk_server_1, first_address ] }
  zk_server_2_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ zk_server_2, first_address ] }
  zk_server_3_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ zk_server_3, first_address ] }

  db_server_ip:
    description: Direccion IP en la red privada de la maquina
    value: { get_attr: [ db_server, first_address ] }

  admin_private_key:
    description: Clave privada clave_generada
    value: { get_attr: [ clave_generada, private_key ] }
